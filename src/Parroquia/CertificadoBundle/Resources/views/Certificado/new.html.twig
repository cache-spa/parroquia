{% extends '::base.html.twig' %}

{% set menu_title = 'Certificados' %}

{% block leftsidebar %}
    {{ knp_menu_render(['main','Certificados']) }}
{% endblock %}

{% block body -%}
    <div class="title-wrapper"><h1>Generar Certificado</h1></div>

    {{ form_start(form) }}
    {{ form_errors(form) }}
    
    {{ form_row(form.tipo) }}
    {{ form_row(form.persona) }}
    
    <div id="datos_persona"></div>
    
    {{ form_rest(form) }}
    {{ form_end(form) }}

        <ul class="record_actions">
            <li>
                <a href="{{ path('certificado') }}">
                    Volver a la lista
                </a>
            </li>
        </ul>
{% endblock %}
    
{% block stylesheets %}
{{ parent() }}
<link rel="stylesheet" href="{{ asset('css/ui-lightness/jquery-ui.parroquia.css') }}">
{% endblock %}    

{% block javascripts %}
    <script>

      (function( $ ) {
        $.widget( "custom.combobox", {
          _create: function() {
            this.wrapper = $( "<span>" )
              .addClass( "custom-combobox" )
              .insertAfter( this.element );

            this.element.hide();
            this._createAutocomplete();
            this._createShowAllButton();
          },

          _createAutocomplete: function() {
            var selected = this.element.children( ":selected" ),
              value = selected.val() ? selected.text() : "";

            this.input = $( "<input type=\"text\">" )
              .appendTo( this.wrapper )
              .val( value )
              .attr( "title", "" )
              .addClass( "" )
              .autocomplete({
                delay: 0,
                minLength: 0,
                source: $.proxy( this, "_source" )
              })
              .tooltip({
                tooltipClass: "ui-state-highlight"
              });

            this._on( this.input, {
              autocompleteselect: function( event, ui ) {
                ui.item.option.selected = true;
                this._trigger( "select", event, {
                  item: ui.item.option
                });
              },

              autocompletechange: "_removeIfInvalid"
            });
          },

          _createShowAllButton: function() {
            var input = this.input,
              wasOpen = false;

            $( "<a>" )
              .attr( "tabIndex", -1 )
              .attr( "title", "Mostrar todos los ítems" )
              .tooltip()
              .appendTo( this.wrapper )
              .button({
                icons: {
                  primary: "ui-icon-triangle-1-s"
                },
                text: false
              })
              .removeClass( "ui-corner-all" )
              .addClass( "custom-combobox-toggle" )
              .mousedown(function() {
                wasOpen = input.autocomplete( "widget" ).is( ":visible" );
              })
              .click(function() {
                input.focus();

                // Close if already visible
                if ( wasOpen ) {
                  return;
                }

                // Pass empty string as value to search for, displaying all results
                input.autocomplete( "search", "" );
              });
          },

          _source: function( request, response ) {
            var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
            response( this.element.children( "option" ).map(function() {
              var text = $( this ).text();
              if ( this.value && ( !request.term || matcher.test(text) ) )
                return {
                  label: text,
                  value: text,
                  option: this
                };
            }) );
          },

          _removeIfInvalid: function( event, ui ) {

            // Selected an item, nothing to do
            if ( ui.item ) {
              return;
            }

            // Search for a match (case-insensitive)
            var value = this.input.val(),
              valueLowerCase = value.toLowerCase(),
              valid = false;
            this.element.children( "option" ).each(function() {
              if ( $( this ).text().toLowerCase() === valueLowerCase ) {
                this.selected = valid = true;
                return false;
              }
            });

            // Found a match, nothing to do
            if ( valid ) {
              return;
            }

            // Remove invalid value
            this.input
              .val( "" )
              .attr( "title", value + " no coincide con ningún ítem existente" )
              .tooltip( "open" );
            this.element.val( "" );
            this._delay(function() {
              this.input.tooltip( "close" ).attr( "title", "" );
            }, 2500 );
            this.input.data( "ui-autocomplete" ).term = "";
          },

          _destroy: function() {
            this.wrapper.remove();
            this.element.show();
          }
        });
      })( jQuery );
      
      </script>
  
    <script>
      
      var url_loading = "{{ asset('images/loading.gif') }}";
      var url_original = $('form').attr('action');
      
      $(function() {
            $('#parroquia_certificadobundle_certificado_persona').combobox({
                 select: function(event, ui) {
                    $("#datos_persona").html('<img src="' + url_loading + '" />');
                    $('form').attr('action',url_original);
                    $.ajax({                        
                            url: "{{ path('certificado_ajax') }}",
                            data: { tipo : $('#parroquia_certificadobundle_certificado_tipo').val(), persona_id : this.value },
                            success: function(data){ 
                                    $("#datos_persona").empty();
                                    $("#datos_persona").append(data);
                            }
                        });                 
                    } 
            });
            
            $('#parroquia_certificadobundle_certificado_tipo').change(function () {
                $("#datos_persona").html('<img src="' + url_loading + '" />');
                $('form').attr('action',url_original);                
                $.ajax({                        
                        url: "{{ path('certificado_ajax') }}",
                        data: { tipo : this.value , persona_id : $('#parroquia_certificadobundle_certificado_persona').val() },
                        success: function(data){ 
                                $("#datos_persona").empty();
                                $("#datos_persona").append(data);
                        }
                    });
            }).change();
        });

        function seleccionarMatrimonio(id){
            var matrimonio_id = 'matrimonio-'+id;
            $('.matrimonio').each(function(){
                if($(this).attr('id') != matrimonio_id)
                {
                    $(this).remove();
                }                
            });
            $(".separador").remove();
            $(".button_seleccionar").remove();
            //Cambiar la url del form
            var url_extra = '?matrimonio-id='+id;
            $('form').attr('action',url_original+url_extra);
        };
      </script>
      
{% endblock %}